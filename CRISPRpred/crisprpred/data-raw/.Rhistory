q()
R
demo()
colors
colors()
R CMD
utils:::menuInstallPkgs()
help("install")
'??install'
`??install'
s
;
#
1
"
'"
'
.
z
E:\MSc\GeneRegulatoryNetwork\CellNetSoftware
install
CMD
CDM
utils:::menuInstallLocal()
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
setRepositories()
R CMD INSTALL -l E:/MSc/GeneRegulatoryNetwork/CellNetSoftware org.Mm.eg.db_2.8.0.tar.gz
R CMD INSTALL -l E:\MSc\GeneRegulatoryNetwork\CellNetSoftware cellnetr.0.1.tar.gz
q()
installed.packages()[,c("Package","Version")]
R CMD INSTALL -l E:\MSc\GeneRegulatoryNetwork\CellNetSoftware cellnetr.0.1.tar.gz
install.packages("E:/MSc/GeneRegulatoryNetwork/CellNetSoftware/org.Mm.eg.db_2.8.0.tar.gz",repos=NULL)
install.packages("E:/MSc/GeneRegulatoryNetwork/CellNetSoftware/CellNet-master.zip",repos=NULL)
q()
install.packages("E:/MSc/GeneRegulatoryNetwork/CellNetSoftware/CellNet-master.zip",repos=NULL)
install.packages("E:/MSc/GeneRegulatoryNetwork/CellNetSoftware/CellNet-master",repos=NULL)
install.packages("E:/MSc/GeneRegulatoryNetwork/CellNetSoftware/CellNet-master")
install.packages("E:/MSc/GeneRegulatoryNetwork/CellNetSoftware/org.Mm.eg.db_2.8.0.tar.gz",repos=NULL)
install.packages("E:/MSc/GeneRegulatoryNetwork/CellNetSoftware/CellNet-master",repos=NULL)
q()
install.packages(c("ggplot2", "gplots", "randomForest", "igraph"))
source("http://bioconductor.org/biocLite.R")
biocLite("affy")
installed.packages()[,c("Package","Version")]
install.packages("E:/MSc/GeneRegulatoryNetwork/CellNetSoftware/org.Mm.eg.db_2.8.0.tar.gz",repos=NULL)
R CMD
a<-c(1,2,3,4)
b<-c(6,7,8,8)
help("cor")
d = cor(a,b,use="everything",method="pearson")
d
d = cor(a,b,use="everything",method="kendall")
d
p<-c(98,34,12,56)
d = cor(a,p,use="everything",method="kendall")
d
d = cor(a,p,use="everything",method="pearson")
d
getwd()
save.image("E:\\MSc\\GeneRegulatoryNetwork\\Tools\\NIMFI\\MyTool\\.RData")
getwd()
q()
hash
help(hash)
q()
load("E:\\MSc\\GeneRegulatoryNetwork\\Tools\\NIMFI\\MyTool\\.RData")
q()
q()
a
b
a
clc
clear
print a
install.packages("R.matlab")
install.packages('caret')
install.packages('mlbench')
install.packages('Hmisc')
install.packages('randomForest')
data = c(1,5)
rfe(data)
q()
install.packages('caret')
a
rfe(a)
library(caret)
install.packages('pbkrtest')
updateR()
update()
update('installr')
setInternet2(TRUE)
if(!require(installr)) { install.packages("installr"); require(installr) }
updateR()
library(caret)
install.packages('caret')
library(caret)
rfe
install.packages("quantreg")
library(caret)
install.package("caret",dependencies = T)
install.packages("caret",dependencies = T)
install.packages("pbkrtest")
library(caret)
install.packages('iterators')
library(caret)
install.packages('nloptr')
library(caret)
install.packages('quantreg')
library(caret)
rfe
install.packages('mlbench')
install.packages('Hmisc')
install.packages('e1071')
install.packages('DAAG')
install.packages('earth')
install.packages('h2o')
getwd()
setwd('E:/MSc/CRISPR-Cas9/FinalCRISPR/CRISPR-GIT/crisprpred/data-raw')
getwd()
data = read.csv('sample_data.csv')
data
colnames(data)
data$X = NULL
data$X30mer=NULL
data$drug=NULL
data
data$Target.gene=NULL
data
data.predictions = data$predictions
data$predictions=NULL
data
dr = rfe(data, data.predictions)
dr <- rfe(data, data.predictions)
y=data.predictions
y
dr <- rfe(data, y)
ctrl <- rfeControl(functions = lmFuncs,
method = "repeatedcv",
repeats = 5,
verbose = FALSE)
lmProfile <- rfe(data, y,
rfeControl = ctrl)
lmProfile$results
predictors(lmProfile)
plot(lmProfile, type = c("g", "o"))
trellis.par.set(caretTheme())
plot(lmProfile, type = c("g", "o"))
lmProfile$fit
plot(lmProfile, type = c("g", "o"))
lmProfile$pred
lmProfile$results
lmProfile$bestSubset
lmProfile$optVariables
lmProfile$optsize
lmProfile$call
lmProfile$control
lmProfile$resample
lmProfile$metric
lmProfile$maximize
lmProfile$perfNames
lmProfile$times
lmProfile$resampledCM
lmProfile$obsLevels
lmProfile$
;
lmProfile$dots
lmProfile$fit$coefficients
lmProfile$fit$fitted.values
lmProfile$fit$rank
lmProfile$fit$qr
d = varImp(lmProfile
)
d
plot(d)
dat = read.csv('FC_RES_Featurized')
dat = read.csv('FC_RES_Featurized.csv')
colnames(dat)
dat$X=NULL
dat$X30mer=NULL
dat$Target.gene=NULL
dat$drug=NULL
dat
y = dat$predictions
dat$predictions = NULL
ctrl
lmProfile <- rfe(dat, y,
rfeControl = ctrl)
datat = findCorrelation(dat, cutoff = 0.1)
correlationMat = cor(dat)
correlationMat
datat = findCorrelation(dat, cutoff = 0.1)
set.seed(5)
lmProfile <- rfe(dat, y,
rfeControl = ctrl)
colnames(dat)
a = cor(dat)
a
dat$GG =NULL
dat
datat = cor(dat)
correlation = findCorrelation(datat, cutoff = 0.1)
correlation
correlation = findCorrelation(datat, cutoff = 0.8)
correlation
correlation = findCorrelation(datat, cutoff = 0.5)
correlation
lmProfile <- rfe(dat, y,
rfeControl = ctrl)
lmProfile
plot(lmProfile)
imp = varImp(lmProfile)
imp
plot(imp)
plot(imp)
data[2]
colnames(data[2])
colnames(data)
colnames(data[0])
colnames(data[1])
colnames(data[2])
colnames(data[3])
colnames(data[4])
colnames(data[5])
imp
plot(imp)
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
graphics.off()
plot(imp)
dev.cur()
dev.list()
dev.next(which = dev.cur())
dev.prev(which = dev.cur())
dev.off(which = dev.cur())
dev.set(which = dev.next())
dev.new(...)
graphics.off()
dev.cur()
dev.list()
dev.next(which = dev.cur())
dev.prev(which = dev.cur())
dev.off(which = dev.cur())
dev.set(which = dev.next())
dev.new(...)
graphics.off()
dev.cur()
dev.list()
dev.next(which = dev.cur())
dev.prev(which = dev.cur())
dev.off(which = dev.cur())
dev.set(which = dev.next())
dev.new(..., noRStudioGD = FALSE)
graphics.off()
dev.cur()
dev.list()
dev.next(which = dev.cur())
dev.prev(which = dev.cur())
dev.off(which = dev.cur())
dev.set(which = dev.next())
dev.new(noRStudioGD = FALSE)
graphics.off()
plot(imp)
barplot(imp)
imp$Overall
barplot(imp$Overall)
imp
imp[1]
imp[0]
rownames(imp)
barplot(imp$Overall,xlab = 'Features')
barplot(imp$Overall,xlab = 'Features',ylab = 'Importance')
barplot(imp$Overall,xlab = 'Features',ylab = 'Importance',cex.names = rownames(imp))
barplot(imp$Overall,xlab = 'Features',ylab = 'Importance',cex.axis =  = rownames(imp))
barplot(imp$Overall,xlab = 'Features',ylab = 'Importance',cex.axis = rownames(imp))
barplot(imp$Overall,xlab = 'Features',ylab = 'Importance'
)
barplot(imp$Overall,xlab = 'Features',ylab = 'Importance',col = rownames(imp))
barplot(imp$Overall,xlab = 'Features',ylab = 'Importance',legend.text = rownames(imp))
barplot(imp$Overall,xlab = 'Features',ylab = 'Importance',args.legend = rownames(imp))
barplot(imp$Overall,xlab = 'Features',ylab = 'Importance',names.arg = rownames(imp))
barplot(imp$Overall,xlab = 'Features',ylab = 'Importance',names.arg = rownames(imp), horiz = FALSE)
barplot(imp$Overall,xlab = 'Features',ylab = 'Importance',names.arg = rownames(imp), horiz=TRUE)
barplot(imp$Overall,xlab = 'Features',ylab = 'Importance',names.arg = rownames(imp))
barplot(imp$Overall,xlab = 'Features',ylab = 'Importance',names.arg = rownames(imp))
x = barplot(imp$Overall,xlab = 'Features',ylab = 'Importance',names.arg = rownames(imp))
labs <- paste(names(table(rownames(imp))), "cylinders")
text(cex=1, x=x-.25, y=-1.25, labs, xpd=TRUE, srt=45, pos=2)
x = barplot(imp$Overall,xlab = 'Features',ylab = 'Importance',names.arg = rownames(imp))
text(cex=1, x=x-.25, y=-1.25, labs, xpd=TRUE, srt=45, pos=2)
x = barplot(imp$Overall,xlab = 'Features',ylab = 'Importance',names.arg = rownames(imp))
labs <- paste(names(table(rownames(imp))))
text(cex=1, x=x-.25, y=-1.25, labs, xpd=TRUE, srt=45, pos=2)
x = barplot(imp$Overall,xlab = 'Features',ylab = 'Importance',names.arg = rownames(imp),lass=2)
x = barplot(imp$Overall,xlab = 'Features',ylab = 'Importance',names.arg = rownames(imp),las=2)
text(srt=45)
text(x,srt=45)
x
x = barplot(imp$Overall,xlab = 'Features',ylab = 'Importance',names.arg = rownames(imp),cex.axis = 0.6)
x = barplot(imp$Overall,xlab = 'Features',ylab = 'Importance',names.arg = rownames(imp))
text(cex=0.6,x=x-0.25,y=-1.25,rownames(imp),xpd=TRUE,srt=60)
x = barplot(imp$Overall,xlab = 'Features',ylab = 'Importance'
)
text(cex=0.6,x=x-0.25,y=-1.25,rownames(imp),xpd=TRUE,srt=60)
text(cex=0.6,x=x-0.25,y=1.25,rownames(imp),xpd=TRUE,srt=60)
text(cex=0.6,y=1.25,rownames(imp),xpd=TRUE,srt=60)
text(cex=0.6,x=x,y=1.25,rownames(imp),xpd=TRUE,srt=60)
x = barplot(imp$Overall,xlab = 'Features',ylab = 'Importance')
text(cex=0.6,x=x,y=1.25,rownames(imp),xpd=TRUE,srt=60)
text(cex=0.6,x=x,y=-4.25,rownames(imp),xpd=TRUE,srt=60)
text(x=rownames(imp), y=par()$usr[3]-0.1*(par()$usr[4]-par()$usr[3]),labels=lab, srt=45, adj=1, xpd=TRUE)
x = barplot(imp$Overall,xlab = 'Features',ylab = 'Importance',las=2)
x = barplot(imp$Overall,xlab = 'Features',ylab = 'Importance',las=2,names.arg = rownames(imp))
x = barplot(imp$Overall,xlab = 'Features',ylab = 'Importance',las=2,names.arg = rownames(imp),srt=45)
x = barplot(imp$Overall,xlab = 'Features',ylab = 'Importance',las=2,names.arg = rownames(imp),srt=45,xaxt='n')
nrow(imp)
text(cex=1,x=x,y=-4.25,rownames(imp),xpd=TRUE,srt=60)
text(cex=1,x=x,y=-7,rownames(imp),xpd=TRUE,srt=60)
()
par(mar = c(7, 4, 2, 2) + 0.2) #add room for the rotated labels
end_point = 0.5 + nrow(imp) + nrow(imp)-1
barplot(imp$Overall, col="grey50",
main="",
ylab="mtcars - qsec", ylim=c(0,5+max(imp$Overall)),
xlab = "",
space=1)
text(seq(1.5,end_point,by=2), par("usr")[3]-0.25,
srt = 60, adj= 1, xpd = TRUE,
labels = paste(rownames(imp)), cex=0.65)
text(seq(1.5,end_point,by=2), par("usr")[3]-0.25,
srt = 60, adj= 1, xpd = TRUE,
labels = paste(rownames(imp)), cex=0.65)
getwd()
data = read.csv('sample_data.cssv')
data = read.csv('sample_data.csv')
data
data]1
data[1]
data[,1]
data[1,1]
data[2,3]
data[2,]
write.csv(data[2,])
write.csv(data[2,],file='test.txt')
data = read.csv('FC_plus_RES_NEW.csv')
write.csv(data[2,],file='test.txt')
getwd()
fcres = read.csv('FC_plus_RES_2016.csv')
