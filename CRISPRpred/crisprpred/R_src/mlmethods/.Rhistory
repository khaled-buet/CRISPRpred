getwd()
randomforest = function(filepath, featurelist, kfold = 10, trees = 2, samplerate = 0.6) {
data = read.csv(filepath)
predict = featurelist[length(featurelist)]
preddata = as.vector(data[predict][,])
#cat('After:',preddata, '\n')
#print(preddata)
featurelist = featurelist[-length(featurelist)]
#cat(featurelist,'\n')
h2o.init()
inputdata.hex = h2o.uploadFile(path = filepath, destination_frame = "inputdata.hex")
rfmodel = h2o.randomForest(
x = featurelist, y = predict, training_frame = inputdata.hex, nfolds = kfold, ntrees = trees, sample_rate = samplerate
)
rfpred = h2o.predict(rfmodel, inputdata.hex)
#cat('DP:',as.vector(dppred),'\n')
j = 1
rmseE = c()
spcor = c()
step = length(data[,1])/kfold
for (i in 1:(kfold-1)) {
rmseE = c(rmseE,rmse(preddata[j:(j + step)] - as.vector(rfpred)[j:(j + step)]))
spcor = c(spcor,stats::cor(preddata[j:(j + step)], as.vector(rfpred)[j:(j + step)], method = 'spearman'))
j = j + step
}
cat("Random Forest RMSE:", rmseE,"\n")
cat("Spearman Cor. for RF:", spcor, "\n")
return(spcor)
}
getwd()
path = getwd()
path
path = getwd()+'/'
path = paste(getwd(),'/FinalFeaturedData.csv')
path
path = paste0(getwd(),'/FinalFeaturedData.csv')
path
featurelist = c(
"score_drug_gene_rank",  "Percent.Peptide",  "score_drug_gene_threshold",  "Amino.Acid.Cut.position",  "GC_Count",  "A_Count",  "G_24",  "G_Count",  "G_28",  "C_24",  "GGG_26",  "TT_21",  "TTC_22",  "T_23",  "T_22",  "TGGG_25",  "TT_23",  "AC_21",  "C_20",  "TTTG_23",  "GA_24",  "T_24",  "GTGG_24",  "GG_20",  "TTG_24",  "TTT_22",  "A_18",  "G_18",  "TGG_25",  "TG_23", "predictions"
)
data = read.csv(path)
names(data)
randomforest(path, featurelist = featurelist, kfold = 10, trees = 10)
library(h2o)
randomforest(path, featurelist = featurelist, kfold = 10, trees = 10)
rmse = function(error)
{
sqrt(mean(error^2))
}
randomforest(path, featurelist = featurelist, kfold = 10, trees = 10)
library(earth)
source('~/BioInformatics/CRISPRpredProject/CRISPRpred/crisprpred/R_src/mlmethods/mars.R')
names(data)
featurelist
mars(featurelist = featurelist, featuredata = data, 0)
source('~/BioInformatics/CRISPRpredProject/CRISPRpred/crisprpred/R_src/featureformula/featureformula.R')
source('~/BioInformatics/CRISPRpredProject/CRISPRpred/crisprpred/R_src/featureformula/featureformula.R')
mars(featurelist = featurelist, featuredata = data, 0)
mars(featurelist = featurelist, featuredata = data, 1)
names(data)
